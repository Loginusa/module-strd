<?xml version="1.0"?>
  <database name="FUNCTION GSP_UPDATE_PRICE">
    <function name="GSP_UPDATE_PRICE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_Product RECORD;

    v_AD_User_ID VARCHAR2(32) ;   
    v_Action VARCHAR(1000);
    v_material_id VARCHAR2(32) ;   
    v_client_id VARCHAR2(32) ;
    v_org_id VARCHAR2(32) ;
    v_version_price VARCHAR2(32) ;
    v_price NUMBER;

    v_Productprice_ID VARCHAR2(32) ;
    v_pricelist_ID VARCHAR2(32) ;
    v_Currency VARCHAR2(32) ;

    END_PROCESS BOOLEAN:=false;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.CreatedBy AS AD_User_ID
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;

    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    


  SELECT gpp.materialtype,
         gpp.ad_client_id, gpp.ad_org_id,gpp.m_pricelist_version_id,gpp.pricelist,gpp.m_pricelist_id
         INTO v_material_id,v_client_id, v_org_id,v_version_price,v_price,v_pricelist_ID
  FROM gsp_master_price gpp 
  WHERE gpp.gsp_master_price_id = v_Record_ID;

  SELECT C_CURRENCY_ID INTO v_Currency FROM M_Pricelist WHERE M_Pricelist_ID = v_pricelist_ID;


IF (v_material_id IS NOT NULL) THEN
FOR Cur_Product IN
      (SELECT * FROM m_product 
       WHERE em_gsp_materialtype = v_material_id
      )
    LOOP

   /* UPDATE m_productprice SET pricelist = v_price,pricestd = v_price,em_gsp_master_price_id = v_Record_ID
    WHERE m_productprice.m_product_id = Cur_Product.m_product_id 
    AND m_productprice.m_pricelist_version_id = v_version_price;*/

        Ad_Sequence_Next('M_ProductPrice', Cur_Product.AD_Client_ID, v_Productprice_ID);

        INSERT
        INTO m_productprice
          (m_productprice_id,m_pricelist_version_id,m_product_id,ad_client_id,ad_org_id,isactive,
           created,createdby,updated,updatedby,pricelist,pricestd,pricelimit,cost,algorithm,
           em_gsp_master_price_id
            )
         VALUES(v_Productprice_ID,v_version_price,Cur_Product.m_product_id,
         Cur_Product.ad_client_id,'0','Y',now(),
         v_AD_User_ID,now(),v_AD_User_ID,
         C_CURRENCY_CONVERT(v_price,'100',v_Currency,TO_DATE(COALESCE(now(), now())), NULL,Cur_Product.ad_client_id,Cur_Product.ad_org_id),
         C_CURRENCY_CONVERT(v_price,'100',v_Currency,TO_DATE(COALESCE(now(), now())), NULL,Cur_Product.ad_client_id,Cur_Product.ad_org_id),
         C_CURRENCY_CONVERT(v_price,'100',v_Currency,TO_DATE(COALESCE(now(), now())), NULL,Cur_Product.ad_client_id,Cur_Product.ad_org_id),
         0,'S',v_Record_ID);  
    

    END LOOP;

	UPDATE gsp_master_price SET isprocessed='Y' WHERE gsp_master_price_id = v_Record_ID;
    
END IF;
  


    --<<END_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message);
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message);
    RETURN;
  END; --BODY
  
EXCEPTION
WHEN OTHERS THEN

  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END GSP_UPDATE_PRICE
]]></body>
    </function>
  </database>
