<?xml version="1.0"?>
  <database name="FUNCTION SCG_MASTERKODE_PROCEDURE">
    <function name="SCG_MASTERKODE_PROCEDURE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* M Fachmi Rizal - PT.Global Anugerah Indonesia
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Pegawai untuk diterima
    Cur_Pegawai RECORD;
    -- Parameter Variables
    v_AD_User_ID VARCHAR2(32) ;
    v_size VARCHAR(32);--OBTG:VARCHAR2--
    v_core VARCHAR(32);--OBTG:VARCHAR2--
    v_phasa VARCHAR(32);--OBTG:VARCHAR2--
    v_netral VARCHAR(32);
    v_lighting VARCHAR(32);
    v_conductor VARCHAR(32);
    v_uom VARCHAR(32);
    
--    v_LineNo NUMERIC(10) ;
    END_PROCESS BOOLEAN:=false;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.CreatedBy AS AD_User_ID
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
    
      IF(Cur_Parameter.ParameterName='Phasaamt') THEN
        v_phasa:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('Phasaamt=' || v_phasa) ;
        
     ELSIF(Cur_Parameter.ParameterName='Sizeamt') THEN
        v_size:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('Sizeamt=' || v_size) ;
         
     ELSIF(Cur_Parameter.ParameterName='Netralamt') THEN
        v_netral:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('Netralamt=' || v_netral) ;
    
      ELSIF(Cur_Parameter.ParameterName='Uom') THEN
        v_uom:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('Uom=' || v_uom) ;
        
     ELSIF(Cur_Parameter.ParameterName='Conductor') THEN
        v_conductor:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('conductor=' || v_conductor);  

     ELSIF(Cur_Parameter.ParameterName='Coreamt') THEN
        v_core:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('Coreamt=' || v_core);  

      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;


	IF(v_size is Not Null) THEN
		
		UPDATE scg_size SET name = coalesce(v_size,'')
		||' '|| coalesce(v_uom,'') || ' '|| coalesce(v_conductor,'')
		WHERE scg_size_id=v_Record_ID; 

	end if;

	IF(v_size is Not Null AND v_core is Not Null) THEN
		
		UPDATE scg_size SET name = coalesce(v_core,'') 
		||'x'|| coalesce(v_size,'')|| coalesce(v_uom,'') 
		|| ' '|| coalesce(v_conductor,'')
		WHERE scg_size_id=v_Record_ID; 

	end if;

  
	IF(v_phasa is Not Null AND v_core is Not Null AND v_netral is Not Null) THEN

		UPDATE scg_size SET name = coalesce(v_core,'') 
		||'x'||coalesce(v_phasa,'')||'+'
		||coalesce(v_netral,'')|| coalesce(v_size,'')
		||coalesce(v_uom,'') 
		||' '|| coalesce(v_conductor,'')
		WHERE scg_size_id=v_Record_ID; 
	end if;      
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;

   
    --<<END_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN

  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END SCG_MASTERKODE_PROCEDURE
]]></body>
    </function>
  </database>
